#!/usr/bin/python3

import sys, getopt
import markdown

def on_start_document():
	print("<html lang=\"en\">\n")
	print("<head>\n")
	print("    <meta charset=\"utf-8\" />\n")
	print("    <meta name=\"viewport\" content=\"width=1024\" />\n")
	print("    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n")
	print("    <title>impress.js | presentation tool based on the power of CSS3 transforms and transitions in modern browsers | by Bartek Szopka @bartaz</title>    \n")
	print("    <meta name=\"description\" content=\"impress.js is a presentation tool based on the power of CSS3 transforms and transitions in modern browsers and inspired by the idea behind prezi.com.\" />\n")
	print("    <meta name=\"author\" content=\"Bartek Szopka\" />\n")
	print("    <link href=\"http://fonts.googleapis.com/css?family=Open+Sans:regular,semibold,italic,italicsemibold|PT+Sans:400,700,400italic,700italic|PT+Serif:400,700,400italic,700italic\" rel=\"stylesheet\" />\n")
	print("    <link href=\"css/slinix.css\" rel=\"stylesheet\" />    \n")
	print("    <link rel=\"shortcut icon\" href=\"favicon.png\" />\n")
	print("    <link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\" />\n")
	print("</head>\n")
	print("<body class=\"slinix-not-supported\">\n")	
	print("<div id=\"slinix\">\n")

def on_end_document():
	print("</div>\n")
	print("<script src=\"js/slinix.js\"></script>\n")
	print("<script>document.addEventListener(\"load\", function() { document.slinix = new Slinix(); document.slinix.start(); });</script>\n")
	print("</body>\n")
	print("</html>\n")

def on_slide(content):
	print("<div class=\"slide\">")
	print(markdown.markdown(content))
	print("</div>")

def parse_input(filename):
	aux = ""	
	with open(filename) as f:
		for l in f:			
			if (l == "---\n"):
				on_slide(aux)
				aux = ""
			else:
				aux += l	

def usage():
	print("{} -f input_filename -o output_filename [-h]")	

def parse_opt():
	try:
		opts, args = getopt.getopt(sys.argv[1:], "hef:c:s:o:")
	except getopt.GetoptError as err:
		print(str(err))
		usage()
		sys.exit(2)

	output_filename = None
	input_filename = None
	embed_figures = False
	script_filename = "slinix.js"
	css_filename = "slinix.css"

	for opt, arg in opts:                   
		if opt in ("-h", "--help"):
			usage()
			sys.exit()
		elif opt == "-f":
			input_filename = arg
		elif opt == "-o":
			output_filename = arg
		elif opt == "-c":
			css_filename = arg
		elif opt == "-s":
			script_filename = arg
		else:
			assert False, "unhandled option"
	return { "ofname": output_filename, "ifname": input_filename, "cfname": css_filename, 
		"sfname": script_filename, "embed": embed_figures }

def main():
	sys.stderr.write("{} version 0.1\n".format(sys.argv[0]))

	opts = parse_opt()
	on_start_document()
	parse_input(opts["ifname"])
	on_end_document()

if __name__ == "__main__":
	main()